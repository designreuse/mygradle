<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd
                         http://www.springframework.org/schema/tx
                          http://www.springframework.org/schema/tx/spring-tx.xsd"
>

    <!--扫描组件-->
    <!--配置数据源-->
    <!--数据库工厂-->
    <!--事务-->

    <context:component-scan base-package="com.git"></context:component-scan>

    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->

    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>


    <!--  配置SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!--指定hibernate配置文件的位置-->
        <property name="dataSource">
            <bean class="com.mchange.v2.c3p0.ComboPooledDataSource">
                <property name="driverClass" value="com.mysql.jdbc.Driver"></property>
                <property name="jdbcUrl" value="jdbc:mysql://108.61.126.40:3306/oa?useUnicode=true&amp;characterEncoding=UTF-8"></property>
                <property name="user" value="root"></property>
                <property name="password" value=".jjplay1815"></property>

                <!-- 其他配置 -->
                <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
                <property name="initialPoolSize" value="3"></property>
                <!--连接池中保留的最小连接数。Default: 3 -->
                <property name="minPoolSize" value="3"></property>
                <!--连接池中保留的最大连接数。Default: 15 -->
                <property name="maxPoolSize" value="5"></property>
                <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
                <property name="acquireIncrement" value="3"></property>
                <!-- 控制数据源内加载的PreparedStatements数量。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
                <property name="maxStatements" value="8"></property>
                <!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->
                <property name="maxStatementsPerConnection" value="5"></property>
                <!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
                <property name="maxIdleTime" value="1800"></property>

            </bean>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <!--<prop key="hibernate.current_session_context_class">thread</prop>-->
            </props>
        </property>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
        <!--<property name="mappingLocations" value="classpath:hbm/*.hbm.xml"></property>-->


    </bean>

    <!--<bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">-->
        <!--<property name="sessionFactory" ref="sessionFactory"></property>-->
    <!--</bean>-->


    <!--<bean userDAOImpl" class="com.git.dao.impl.UserDAOImpl">-->
        <!--<property name="sessionFactory" ref="sessionFactory"></property>-->

    <!--</bean>-->
    <!--<bean id="userService" class="com.git.service.impl.UserServiceImpl">-->
        <!--<property nauserDAOImpl" ruserDAOImpl"></property>-->
    <!--</bean>-->

    <!--<bean id="saveUserAction" class="com.git.action.SaveUserAction">-->
        <!--<property name="userService" ref="userService"></property>-->
    <!--</bean>-->







    <!-- 5 事务管理 -->
    <!--&lt;!&ndash; 5.1 事务管理器 ：HibernateTransactionManager &ndash;&gt;-->
    <!--<bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager" >-->
        <!--<property name="sessionFactory" ref="sessionFactory"></property>-->
    <!--</bean>-->
    <!--&lt;!&ndash; 5.2 事务详情 ，给ABC进行具体事务设置 &ndash;&gt;-->
    <!--<tx:advice id="txAdvice" transaction-manager="txManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="register"  propagation="REQUIRED" isolation="DEFAULT" />-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--&lt;!&ndash; 5.3 AOP编程，ABCD 筛选 ＡＢＣ  &ndash;&gt;-->
    <!--<aop:config>-->
        <!--<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.git.service..*.*(..))"/>-->
    <!--</aop:config>-->

    <!-- 配置声明式的事务管理（采用基于注解的方式） -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" />


    <import resource="spring_beans.xml"></import>

</beans>